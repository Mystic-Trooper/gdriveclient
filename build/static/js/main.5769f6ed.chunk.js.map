{"version":3,"sources":["components/Home.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","singleFileChangedHandler","event","setState","selectedFile","target","files","multipleFileChangedHandler","selectedFiles","console","log","singleFileUploadHandler","data","FormData","state","append","name","axios","post","headers","accept","Accept-Language","Content-Type","concat","_boundary","then","response","status","error","code","ocShowAlert","fileName","catch","multipleFileUploadHandler","i","length","message","background","arguments","undefined","alertContainer","document","querySelector","alertEl","createElement","textNode","createTextNode","setAttribute","$","css","appendChild","setTimeout","fadeOut","remove","react_default","a","className","id","style","boxShadow","color","marginLeft","type","onChange","onClick","multiple","Component","App","BrowserRouter","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5769f6ed.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport $ from 'jquery';\r\n\r\nclass Home extends Component {\r\n\tconstructor( props ) {\r\n\t\tsuper( props );\r\n\t\tthis.state = {\r\n\t\t\tselectedFile: null,\r\n\t\t\tselectedFiles: null\r\n\t\t}\r\n\t}\r\n\r\n\tsingleFileChangedHandler = ( event ) => {\r\n\t\tthis.setState({\r\n\t\t\tselectedFile: event.target.files[0]\r\n\t\t});\r\n\t};\r\n\r\n\tmultipleFileChangedHandler = (event) => {\r\n\t\tthis.setState({\r\n\t\t\tselectedFiles: event.target.files\r\n\t\t});\r\n\t\tconsole.log( event.target.files );\r\n\t};\r\n\r\n\tsingleFileUploadHandler = ( event ) => {\r\n\t\tconst data = new FormData();\r\n// If file selected\r\n\t\tif ( this.state.selectedFile ) {\r\n\t\t\tdata.append( 'profileImage', this.state.selectedFile, this.state.selectedFile.name );\r\n\t\t\taxios.post( '/api/profile/profile-img-upload', data, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'accept': 'application/json',\r\n\t\t\t\t\t'Accept-Language': 'en-US,en;q=0.8',\r\n\t\t\t\t\t'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t\t.then( ( response ) => {\r\n\t\t\t\t\tif ( 200 === response.status ) {\r\n\t\t\t\t\t\t// If file size is larger than expected.\r\n\t\t\t\t\t\tif( response.data.error ) {\r\n\t\t\t\t\t\t\tif ( 'LIMIT_FILE_SIZE' === response.data.error.code ) {\r\n\t\t\t\t\t\t\t\tthis.ocShowAlert( 'Max size: 2MB', 'red' );\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconsole.log( response.data );\r\n// If not the given file type\r\n\t\t\t\t\t\t\t\tthis.ocShowAlert( response.data.error, 'red' );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// Success\r\n\t\t\t\t\t\t\tlet fileName = response.data;\r\n\t\t\t\t\t\t\tconsole.log( 'filedata', fileName );\r\n\t\t\t\t\t\t\tthis.ocShowAlert( 'File Uploaded', '#3089cf' );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}).catch( ( error ) => {\r\n\t\t\t\t// If another error\r\n\t\t\t\tthis.ocShowAlert( error, 'red' );\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\t// if file not selected throw error\r\n\t\t\tthis.ocShowAlert( 'Please upload file', 'red' );\r\n\t\t}\r\n\t};\r\n\r\n\tmultipleFileUploadHandler = () => {\r\n\t\tconst data = new FormData();\r\n\t\tlet selectedFiles = this.state.selectedFiles;\r\n// If file selected\r\n\t\tif ( selectedFiles ) {\r\n\t\t\tfor ( let i = 0; i < selectedFiles.length; i++ ) {\r\n\t\t\t\tdata.append( 'galleryImage', selectedFiles[ i ], selectedFiles[ i ].name );\r\n\t\t\t}\r\n\t\t\taxios.post( '/api/profile/multiple-file-upload', data, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'accept': 'application/json',\r\n\t\t\t\t\t'Accept-Language': 'en-US,en;q=0.8',\r\n\t\t\t\t\t'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t\t.then( ( response ) => {\r\n\t\t\t\t\tconsole.log( 'res', response );\r\n\t\t\t\t\tif ( 200 === response.status ) {\r\n\t\t\t\t\t\t// If file size is larger than expected.\r\n\t\t\t\t\t\tif( response.data.error ) {\r\n\t\t\t\t\t\t\tif ( 'LIMIT_FILE_SIZE' === response.data.error.code ) {\r\n\t\t\t\t\t\t\t\tthis.ocShowAlert( 'Max size: 2MB', 'red' );\r\n\t\t\t\t\t\t\t} else if ( 'LIMIT_UNEXPECTED_FILE' === response.data.error.code ){\r\n\t\t\t\t\t\t\t\tthis.ocShowAlert( 'Max 4 images allowed', 'red' );\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// If not the given ile type\r\n\t\t\t\t\t\t\t\tthis.ocShowAlert( response.data.error, 'red' );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// Success\r\n\t\t\t\t\t\t\tlet fileName = response.data;\r\n\t\t\t\t\t\t\tconsole.log( 'fileName', fileName );\r\n\t\t\t\t\t\t\tthis.ocShowAlert( 'File Uploaded', '#3089cf' );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}).catch( ( error ) => {\r\n\t\t\t\t// If another error\r\n\t\t\t\tthis.ocShowAlert( error, 'red' );\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\t// if file not selected throw error\r\n\t\t\tthis.ocShowAlert( 'Please upload file', 'red' );\r\n\t\t}\r\n\t};\r\n\r\n\t// ShowAlert Function\r\n\tocShowAlert = ( message, background = '#3089cf' ) => {\r\n\t\tlet alertContainer = document.querySelector( '#oc-alert-container' ),\r\n\t\t\talertEl = document.createElement( 'div' ),\r\n\t\t\ttextNode = document.createTextNode( message );\r\n\t\talertEl.setAttribute( 'class', 'oc-alert-pop-up' );\r\n\t\t$( alertEl ).css( 'background', background );\r\n\t\talertEl.appendChild( textNode );\r\n\t\talertContainer.appendChild( alertEl );\r\n\t\tsetTimeout( function () {\r\n\t\t\t$( alertEl ).fadeOut( 'slow' );\r\n\t\t\t$( alertEl ).remove();\r\n\t\t}, 3000 );\r\n\t};\r\n\r\n\trender() {\r\n\t\tconsole.log( this.state );\r\n\t\treturn(\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t{/* For Alert box*/}\r\n\t\t\t\t<div id=\"oc-alert-container\"></div>\r\n\t\t\t\t{/* Single File Upload*/}\r\n\t\t\t\t<div className=\"card border-light mb-3 mt-5\" style={{ boxShadow: '0 5px 10px 2px rgba(195,192,192,.5)' }}>\r\n\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t<h3 style={{ color: '#555', marginLeft: '12px' }}>Single Image Upload</h3>\r\n\t\t\t\t\t\t<p className=\"text-muted\" style={{ marginLeft: '12px' }}>Upload Size: 250px x 250px ( Max 2MB )</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t<p className=\"card-text\">Please upload an image for your profile</p>\r\n\t\t\t\t\t\t<input type=\"file\" onChange={this.singleFileChangedHandler}/>\r\n\t\t\t\t\t\t<div className=\"mt-5\">\r\n\t\t\t\t\t\t\t<button className=\"btn btn-info\" onClick={this.singleFileUploadHandler}>Upload!</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* Multiple File Upload */}\r\n\t\t\t\t<div className=\"card border-light mb-3\" style={{ boxShadow: '0 5px 10px 2px rgba(195,192,192,.5)' }}>\r\n\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t<h3 style={{ color: '#555', marginLeft: '12px' }}>Upload Muliple Images</h3>\r\n\t\t\t\t\t\t<p className=\"text-muted\" style={{ marginLeft: '12px' }}>Upload Size: 400px x 400px ( Max 2MB )</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t<p className=\"card-text\">Please upload the Gallery Images for your gallery</p>\r\n\t\t\t\t\t\t<input type=\"file\" multiple onChange={this.multipleFileChangedHandler}/>\r\n\t\t\t\t\t\t<div className=\"mt-5\">\r\n\t\t\t\t\t\t\t<button className=\"btn btn-info\" onClick={this.multipleFileUploadHandler}>Upload!</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport Home from \"./components/Home\";\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n\t      <Router>\r\n\t\t      <div>\r\n\t\t\t      <Route exact path=\"/\" component={Home} />\r\n\t\t      </div>\r\n\t      </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}